; report#2


; main함수

0000: ff 80 ; 10000 000 1111 1111 	BR 101 (offset = 101h-2h)

0101: 00 09 ; 00001 001 0000 0000	LDI R1 0

0103: fb f8 ; 11111 000 1111 1011 	CALL 200h(offset = 200h - 105h)

0105: f9 f9 ; 11111 001 1111 1001 	CALL 300h(offset = 300h - 107h)

0107: 01 00 ; 00000 000 0000 0001	HALT


; subroutine 함수
0200: 01 08 ; 00001 000 0000 0001	LDI R0 1

0202: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 1

0204: 00 20 ; 00100 000 000 000 00 	INC R0

0206: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 3

0208: 00 20 ; 00100 000 000 000 00 	INC R0

020a: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 6

020c: 00 20 ; 00100 000 000 000 00 	INC R0

020e: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 10

0210: 00 20 ; 00100 000 000 000 00 	INC R0

0212: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 15

0214: 00 20 ; 00100 000 000 000 00 	INC R0

0216: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 21

0218: 00 20 ; 00100 000 000 000 00 	INC R0

021a: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 28

021c: 00 20 ; 00100 000 000 000 00 	INC R0

021e: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 36

0220: 00 20 ; 00100 000 000 000 00 	INC R0

0222: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 45

0224: 00 20 ; 00100 000 000 000 00 	INC R0

0226: 20 29 ; 00101 001 001 000 00 	ADD R1 R1 R0 // R1 = 55

0228: 00 48 ; 01001 000 000 000 00	RET


; 구구단 outer함수

0300: 00 0a ; 00001 010 0000 0000 	LDI R2 0 // 결과 저장

0302: 00 0b ; 00001 011 0000 0000 	LDI R3 0 // 단수 저장

0304: 09 0c ; 00001 100 0000 1001 	LDI R4 9 // CMP위한 변수

0306: 00 23 ; 00100 011 000 000 00 	INC R3

0308: 8c 38 ; 00111 000 100 011 00 	CMP R4 R3

030a: f4 98 ; 10011 000 1111 0100	BRNS 400h(offset = 400h - 30ch)

030c: 00 48 ; 01001 000 000 000 00	RET


; 구구단 inner함수

0400: 00 0a ; 00001 010 0000 0000 	LDI R2 0 // 결과 저장

0402: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)1

0404: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)2

0406: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)3

0408: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)4

040a: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)5

040c: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)6

040e: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)7

0410: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)8

0412: 4c 2a ; 00101 010 010 011 00 	ADD R2 RS R3 (R2 = R2 + R3)9

0414: f0 fe ; 11111 110 1111 0000 	CALL 306h(offset = 306h- 416h)

0416: 00 48 ; 01001 000 000 000 00	RET



